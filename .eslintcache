[{"D:\\java_spring\\frontend-hoaxies\\frontend\\src\\index.js":"1","D:\\java_spring\\frontend-hoaxies\\frontend\\src\\App.js":"2","D:\\java_spring\\frontend-hoaxies\\frontend\\src\\reportWebVitals.js":"3","D:\\java_spring\\frontend-hoaxies\\frontend\\src\\pages\\UserSignUpPage.js":"4","D:\\java_spring\\frontend-hoaxies\\frontend\\src\\api\\apicalls.js":"5","D:\\java_spring\\frontend-hoaxies\\frontend\\src\\UI\\Spinners.js":"6","D:\\java_spring\\frontend-hoaxies\\frontend\\src\\pages\\LoginPage.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":471,"mtime":1611833978754,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4529,"mtime":1611809938366,"results":"12","hashOfConfig":"9"},{"size":864,"mtime":1611836537247,"results":"13","hashOfConfig":"9"},{"size":185,"mtime":1611653903181,"results":"14","hashOfConfig":"9"},{"size":2388,"mtime":1611836338454,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10fhiw3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\java_spring\\frontend-hoaxies\\frontend\\src\\index.js",[],["34","35"],"D:\\java_spring\\frontend-hoaxies\\frontend\\src\\App.js",["36"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport UserSignUpPage from \"./pages/UserSignUpPage\";\nimport * as apiCalls from \"./api/apicalls\";\nimport LoginPage from \"./pages/LoginPage\";\n\nconst actions = {\n  postSignUp: apiCalls.signUp,\n  login: apiCalls.login,\n  login2: apiCalls.login2,\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserSignUpPage actions={actions} />\n      <LoginPage actions={actions} />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\java_spring\\frontend-hoaxies\\frontend\\src\\reportWebVitals.js",[],"D:\\java_spring\\frontend-hoaxies\\frontend\\src\\pages\\UserSignUpPage.js",["37","38"],"import React, { Component } from \"react\";\r\nimport Spinner from \"../UI/Spinners\";\r\n\r\nexport class UserSignUpPage extends Component {\r\n  state = {\r\n    displayName: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    loading: false,\r\n    errors: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"UserSignUpPage componentDidMount\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"UserSignUpPage componentDidUpdate\");\r\n  }\r\n\r\n  displayNameHandler = (event) => {\r\n    this.setState({\r\n      displayName: event.target.value,\r\n    });\r\n  };\r\n\r\n  usernameHandler = (event) => {\r\n    this.setState({\r\n      username: event.target.value,\r\n    });\r\n  };\r\n\r\n  passwordHandler = (event) => {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n  };\r\n\r\n  repeatPasswordHandler = (event) => {\r\n    this.setState({\r\n      repeatPassword: event.target.value,\r\n    });\r\n  };\r\n\r\n  signUpHandler = (event) => {\r\n    event.preventDefault();\r\n    //alert(\"button clicked\");\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const user = {\r\n      username: this.state.username,\r\n      displayName: this.state.displayName,\r\n      password:\r\n        this.state.password == this.state.repeatPassword\r\n          ? this.state.password\r\n          : null,\r\n    };\r\n    this.props.actions\r\n      .postSignUp(user)\r\n      .then((res) => {\r\n        //alert(\"response has come from the backedn\");\r\n        this.setState({\r\n          displayName: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          repeatPassword: \"\",\r\n          loading: false,\r\n          errors: null,\r\n        });\r\n        return res;\r\n      })\r\n      .catch((apiError) => {\r\n        console.log(apiError.response.data.errors);\r\n        let errors = [];\r\n        for (let key in apiError.response.data.errors) {\r\n          console.log(key, apiError.response.data.errors[key]);\r\n          errors.push({\r\n            on: key,\r\n            message: apiError.response.data.errors[key],\r\n          });\r\n        }\r\n        this.setState({\r\n          displayName: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          repeatPassword: \"\",\r\n          loading: false,\r\n          errors: errors,\r\n        });\r\n        return {};\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"UserSignUpPage Render method\");\r\n\r\n    //let content = <Spinner />;\r\n    let content = (\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </div>\r\n    );\r\n\r\n    if (!this.state.loading) {\r\n      content = (\r\n        <div className=\"container\">\r\n          <h1 className=\"text-center\">SignUp</h1>\r\n          <div className=\"col-12 mb-3\">\r\n            <label>Display Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Your Display Name\"\r\n              value={this.state.displayName}\r\n              onChange={this.displayNameHandler}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mb-3\">\r\n            <label>Username</label>\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Your Username\"\r\n              onChange={this.usernameHandler}\r\n              value={this.state.username}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mb-3\">\r\n            <label>Password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Your Password\"\r\n              onChange={this.passwordHandler}\r\n              value={this.state.password}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mb-3\">\r\n            <label>Repeat Password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Repeat Your Password\"\r\n              onChange={this.repeatPasswordHandler}\r\n              value={this.state.repeatPassword}\r\n            />\r\n          </div>\r\n          <button\r\n            disabled={this.state.loading}\r\n            className=\"btn btn-primary text-center\"\r\n            onClick={this.signUpHandler}\r\n          >\r\n            SignUp\r\n          </button>\r\n          <div>\r\n            {this.state.errors\r\n              ? this.state.errors.map((err) => (\r\n                  <p>\r\n                    {err.on} : {err.message}\r\n                  </p>\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n\r\nexport default UserSignUpPage;\r\n","D:\\java_spring\\frontend-hoaxies\\frontend\\src\\api\\apicalls.js",[],"D:\\java_spring\\frontend-hoaxies\\frontend\\src\\UI\\Spinners.js",[],["39","40"],"D:\\java_spring\\frontend-hoaxies\\frontend\\src\\pages\\LoginPage.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":15},{"ruleId":"50","severity":1,"message":"51","line":56,"column":29,"nodeType":"52","messageId":"53","endLine":56,"endColumn":31},{"ruleId":"41","replacedBy":"54"},{"ruleId":"43","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["56"],["57"],"no-global-assign","no-unsafe-negation"]